server:
  port: 6666
spring:
  config:
    import: optional:classpath:.env[.properties]
  main:
    allow-bean-definition-overriding: true
  ai:
    model:
      image: zhipuai # 设置 图像处理的 AI 为 智谱 AI
      chat: ollama # 设置 聊天 AI 为 OpenAI
      embedding: openai  # 设置 向量生成 AI 为 OpenAI
      audio:
        speech: openai # 设置 语音合成 AI 为 dashscope
        transcription: openai # 设置 语音识别 AI 为 OpenAI
    dashscope:
      rerank:
        enabled: false
        api-key: ${DASHSCOPE_RERANK_API_KEY}
      image:
        enabled: false
        api-key: ${DASHSCOPE_IMAGE_API_KEY}
        options:
          model: wan2.2-t2i-flash # 试用 <97/100 2026-1-2
      chat:
        enabled: false
        api-key: ${DASHSCOPE_CHAT_API_KEY}
      embedding:
        enabled: false
        api-key: ${DASHSCOPE_EMBEDDING_API_KEY}
      audio:
        synthesis:
          api-key: ${DASHSCOPE_AUDIO_API_KEY}
          options:
            model: cosyvoice-v2
            response-format: wav
            voice: longhua_v2 # 设置音色
        transcription:
          api-key: ${DASHSCOPE_AUDIO_API_KEY}
    deepseek:
      api-key: ${DEEPSEEK_API_KEY}
      chat:
        options:
          model: deepseek-chat
        base-url: https://api.deepseek.com
    ollama:
      base-url: http://localhost:11434
      chat.model: qwen3:8b
    zhipuai:
      image:
        api-key: ${ZHIPUAI_IMAGE_API_KEY}
        base-url: https://open.bigmodel.cn/api/paas
        options:
          model: cogview-4-250304
    openai:
      audio:
        speech:
          api-key: ${SILICONFLOW_API_KEY}
          base-url: https://api.siliconflow.cn
          options:
            #            voice: anna
            model: FunAudioLLM/CosyVoice2-0.5B
      #      base-url:  https://api.siliconflow.cn/v1
      embedding:
        #        enabled: true
        options:
          model: BAAI/bge-m3
          #          max-token: 512/
          dimensions: 1024
        api-key: ${SILICONFLOW_API_KEY}
        base-url: https://api.siliconflow.cn
      api-key: ${DEEPSEEK_API_KEY}
    chat:
      memory:
        repository:
          jdbc:
            schema: classpath:/sql/schema.sql
            initialize-schema: always
    memory:
      redis:
        host: localhost
        port: 6379
        timeout: 60000
        password:
    mcp:
      client:
        #        toolcallback:
        #          enabled: true
        name: mcp-client
        sse:
          connections:
            server1:
              url: http://localhost:8085
        #              sse-endpoint: /mcp/book
        #            server2:
        #              url: https://mcp.amap.com
        #              sse-endpoint: /sse?key=${AMAP_API_KEY}
        enabled: true
        type: async
        request-timeout: 60000
    vectorstore:
      pgvector:
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        dimensions: 1024
        max-document-batch-size: 10000 # Optional: Maximum number of documents per batch
    retry:
      max-attempts: 10 # 最大尝试次数
  datasource:
    dynamic:
      strict: true
      datasource:
        mysql:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/deep_seek?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
          username: root
          password: 123456
        postgresql:
          url: jdbc:postgresql://localhost:5432/vector
          username: postgres
          password: 123456
      primary: mysql
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 20MB
#amap:
#  api-key: ${AMAP_API_KEY}
#  base-url: https://mcp.amap.com

extra:
  zhipu-image:
    resolve: GLM-4.1V-Thinking-Flash
  zhipu-chat:
    unknow: GLM-4.5-Flash
  zhipu-video:
    api-key: ${ZHIPUAI_VIDEO_API_KEY}
    model: CogVideoX-Flash
  zhipu-completion:
    api-key: ${ZHIPUAI_COMPLETION_API_KEY}
  dashscope-image:
    resolve: qwen-vl-max #  100W
cloudbed:
  url: https://pngcdn.cn/api/v1
  token: ${IMAGE_OSS_TOKEN}